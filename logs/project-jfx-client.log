2025-04-10 00:19:39.567 [main] INFO  c.project.datasource.DbInitializer.init(49) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
 projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
 nazwa VARCHAR(50) NOT NULL,
 opis VARCHAR(1000),
 dataczas_utworzenia TIMESTAMP DEFAULT now(),
 data_oddania DATE,
 CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
 zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
 nazwa VARCHAR(50) NOT NULL,
 opis VARCHAR(1000),
 kolejnosc INTEGER,
 dataczas_utworzenia TIMESTAMP DEFAULT now(),
 projekt_id INTEGER NOT NULL,
 CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-10 00:19:39.572 [main] INFO  c.project.datasource.DbInitializer.init(49) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id) REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-10 00:30:35.869 [main] INFO  c.project.datasource.DbInitializer.init(49) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
 projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
 nazwa VARCHAR(50) NOT NULL,
 opis VARCHAR(1000),
 dataczas_utworzenia TIMESTAMP DEFAULT now(),
 data_oddania DATE,
 CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
 zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
 nazwa VARCHAR(50) NOT NULL,
 opis VARCHAR(1000),
 kolejnosc INTEGER,
 dataczas_utworzenia TIMESTAMP DEFAULT now(),
 projekt_id INTEGER NOT NULL,
 CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-10 00:30:35.872 [main] INFO  c.project.datasource.DbInitializer.init(49) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id) REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-10 00:30:43.449 [pool-2-thread-1] ERROR c.p.controller.ProjectController.lambda$edytujZadanie$11(356) - Błąd podczas zapisywania zadania!
java.lang.RuntimeException: java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation ; UNIQUE_KOLEJNOSC table: ZADANIE
	at project.jfx.client/com.project.dao.ZadanieDAOImpl.setZadanie(ZadanieDAOImpl.java:86)
	at project.jfx.client/com.project.controller.ZadanieController.lambda$edytujZadanie$11(ZadanieController.java:346)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLIntegrityConstraintViolationException: integrity constraint violation: unique constraint or index violation ; UNIQUE_KOLEJNOSC table: ZADANIE
	at org.hsqldb/org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb/org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb/org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb/org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source)
	at com.zaxxer.hikari@6.2.1/com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari@6.2.1/com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at project.jfx.client/com.project.dao.ZadanieDAOImpl.setZadanie(ZadanieDAOImpl.java:76)
	... 4 common frames omitted
Caused by: org.hsqldb.HsqlException: integrity constraint violation: unique constraint or index violation ; UNIQUE_KOLEJNOSC table: ZADANIE
	at org.hsqldb/org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb/org.hsqldb.Constraint.getException(Unknown Source)
	at org.hsqldb/org.hsqldb.index.IndexAVL.insert(Unknown Source)
	at org.hsqldb/org.hsqldb.persist.RowStoreAVL.indexRow(Unknown Source)
	at org.hsqldb/org.hsqldb.TransactionManager2PL.addInsertAction(Unknown Source)
	at org.hsqldb/org.hsqldb.Session.addInsertAction(Unknown Source)
	at org.hsqldb/org.hsqldb.Table.insertSingleRow(Unknown Source)
	at org.hsqldb/org.hsqldb.StatementDML.insertRowSet(Unknown Source)
	at org.hsqldb/org.hsqldb.StatementInsert.getResult(Unknown Source)
	at org.hsqldb/org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb/org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb/org.hsqldb.Session.execute(Unknown Source)
	... 9 common frames omitted
2025-04-10 00:31:46.963 [main] INFO  c.project.datasource.DbInitializer.init(49) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
 projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
 nazwa VARCHAR(50) NOT NULL,
 opis VARCHAR(1000),
 dataczas_utworzenia TIMESTAMP DEFAULT now(),
 data_oddania DATE,
 CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
 zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
 nazwa VARCHAR(50) NOT NULL,
 opis VARCHAR(1000),
 kolejnosc INTEGER,
 dataczas_utworzenia TIMESTAMP DEFAULT now(),
 projekt_id INTEGER NOT NULL,
 CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-10 00:31:46.966 [main] INFO  c.project.datasource.DbInitializer.init(49) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id) REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-10 00:32:45.341 [main] INFO  c.project.datasource.DbInitializer.init(49) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
 projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
 nazwa VARCHAR(50) NOT NULL,
 opis VARCHAR(1000),
 dataczas_utworzenia TIMESTAMP DEFAULT now(),
 data_oddania DATE,
 CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
 zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
 nazwa VARCHAR(50) NOT NULL,
 opis VARCHAR(1000),
 kolejnosc INTEGER,
 dataczas_utworzenia TIMESTAMP DEFAULT now(),
 projekt_id INTEGER NOT NULL,
 CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-10 00:32:45.342 [main] INFO  c.project.datasource.DbInitializer.init(49) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id) REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-10 00:33:45.680 [main] INFO  c.project.datasource.DbInitializer.init(49) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
 projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
 nazwa VARCHAR(50) NOT NULL,
 opis VARCHAR(1000),
 dataczas_utworzenia TIMESTAMP DEFAULT now(),
 data_oddania DATE,
 CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
 zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
 nazwa VARCHAR(50) NOT NULL,
 opis VARCHAR(1000),
 kolejnosc INTEGER,
 dataczas_utworzenia TIMESTAMP DEFAULT now(),
 projekt_id INTEGER NOT NULL,
 CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-10 00:33:45.682 [main] INFO  c.project.datasource.DbInitializer.init(49) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id) REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-10 00:33:56.146 [main] INFO  c.project.datasource.DbInitializer.init(49) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
 projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
 nazwa VARCHAR(50) NOT NULL,
 opis VARCHAR(1000),
 dataczas_utworzenia TIMESTAMP DEFAULT now(),
 data_oddania DATE,
 CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
 zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
 nazwa VARCHAR(50) NOT NULL,
 opis VARCHAR(1000),
 kolejnosc INTEGER,
 dataczas_utworzenia TIMESTAMP DEFAULT now(),
 projekt_id INTEGER NOT NULL,
 CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-10 00:33:56.148 [main] INFO  c.project.datasource.DbInitializer.init(49) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id) REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-10 00:44:38.821 [main] INFO  c.project.datasource.DbInitializer.init(49) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
 projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
 nazwa VARCHAR(50) NOT NULL,
 opis VARCHAR(1000),
 dataczas_utworzenia TIMESTAMP DEFAULT now(),
 data_oddania DATE,
 CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
 zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
 nazwa VARCHAR(50) NOT NULL,
 opis VARCHAR(1000),
 kolejnosc INTEGER,
 dataczas_utworzenia TIMESTAMP DEFAULT now(),
 projekt_id INTEGER NOT NULL,
 CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-10 00:44:38.824 [main] INFO  c.project.datasource.DbInitializer.init(49) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id) REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-10 00:45:10.559 [main] INFO  c.project.datasource.DbInitializer.init(49) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
 projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
 nazwa VARCHAR(50) NOT NULL,
 opis VARCHAR(1000),
 dataczas_utworzenia TIMESTAMP DEFAULT now(),
 data_oddania DATE,
 CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
 zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
 nazwa VARCHAR(50) NOT NULL,
 opis VARCHAR(1000),
 kolejnosc INTEGER,
 dataczas_utworzenia TIMESTAMP DEFAULT now(),
 projekt_id INTEGER NOT NULL,
 CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-10 00:45:10.561 [main] INFO  c.project.datasource.DbInitializer.init(49) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id) REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-10 00:47:40.666 [main] INFO  c.project.datasource.DbInitializer.init(49) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
 projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
 nazwa VARCHAR(50) NOT NULL,
 opis VARCHAR(1000),
 dataczas_utworzenia TIMESTAMP DEFAULT now(),
 data_oddania DATE,
 CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
 zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
 nazwa VARCHAR(50) NOT NULL,
 opis VARCHAR(1000),
 kolejnosc INTEGER,
 dataczas_utworzenia TIMESTAMP DEFAULT now(),
 projekt_id INTEGER NOT NULL,
 CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-10 00:47:40.669 [main] INFO  c.project.datasource.DbInitializer.init(49) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id) REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-10 22:43:15.450 [main] INFO  c.project.datasource.DbInitializer.init(49) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
 projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
 nazwa VARCHAR(50) NOT NULL,
 opis VARCHAR(1000),
 dataczas_utworzenia TIMESTAMP DEFAULT now(),
 data_oddania DATE,
 CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
 zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
 nazwa VARCHAR(50) NOT NULL,
 opis VARCHAR(1000),
 kolejnosc INTEGER,
 dataczas_utworzenia TIMESTAMP DEFAULT now(),
 projekt_id INTEGER NOT NULL,
 CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-10 22:43:15.453 [main] INFO  c.project.datasource.DbInitializer.init(49) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id) REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

2025-04-10 23:03:57.891 [pool-2-thread-1] ERROR c.p.controller.ProjectController.lambda$edytujZadanie$11(350) - Błąd podczas zapisywania zadania!
java.lang.RuntimeException: java.sql.SQLDataException: data exception: string data, right truncation
	at project.jfx.client/com.project.dao.ZadanieDAOImpl.setZadanie(ZadanieDAOImpl.java:102)
	at project.jfx.client/com.project.controller.ZadanieController.lambda$edytujZadanie$11(ZadanieController.java:340)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLDataException: data exception: string data, right truncation
	at org.hsqldb/org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb/org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb/org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb/org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source)
	at com.zaxxer.hikari@6.2.1/com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari@6.2.1/com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at project.jfx.client/com.project.dao.ZadanieDAOImpl.setZadanie(ZadanieDAOImpl.java:92)
	... 4 common frames omitted
Caused by: org.hsqldb.HsqlException: data exception: string data, right truncation
	at org.hsqldb/org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb/org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb/org.hsqldb.types.CharacterType.castOrConvertToType(Unknown Source)
	at org.hsqldb/org.hsqldb.types.CharacterType.convertToType(Unknown Source)
	at org.hsqldb/org.hsqldb.StatementDML.getUpdatedData(Unknown Source)
	at org.hsqldb/org.hsqldb.StatementDML.executeUpdateStatement(Unknown Source)
	at org.hsqldb/org.hsqldb.StatementDML.getResult(Unknown Source)
	at org.hsqldb/org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb/org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb/org.hsqldb.Session.execute(Unknown Source)
	... 9 common frames omitted
2025-04-10 23:04:55.213 [pool-2-thread-1] ERROR c.p.controller.ProjectController.lambda$edytujZadanie$11(350) - Błąd podczas zapisywania zadania!
java.lang.RuntimeException: java.sql.SQLDataException: data exception: string data, right truncation
	at project.jfx.client/com.project.dao.ZadanieDAOImpl.setZadanie(ZadanieDAOImpl.java:102)
	at project.jfx.client/com.project.controller.ZadanieController.lambda$edytujZadanie$11(ZadanieController.java:340)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLDataException: data exception: string data, right truncation
	at org.hsqldb/org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb/org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb/org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb/org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source)
	at com.zaxxer.hikari@6.2.1/com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari@6.2.1/com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at project.jfx.client/com.project.dao.ZadanieDAOImpl.setZadanie(ZadanieDAOImpl.java:92)
	... 4 common frames omitted
Caused by: org.hsqldb.HsqlException: data exception: string data, right truncation
	at org.hsqldb/org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb/org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb/org.hsqldb.types.CharacterType.castOrConvertToType(Unknown Source)
	at org.hsqldb/org.hsqldb.types.CharacterType.convertToType(Unknown Source)
	at org.hsqldb/org.hsqldb.StatementDML.getUpdatedData(Unknown Source)
	at org.hsqldb/org.hsqldb.StatementDML.executeUpdateStatement(Unknown Source)
	at org.hsqldb/org.hsqldb.StatementDML.getResult(Unknown Source)
	at org.hsqldb/org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb/org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb/org.hsqldb.Session.execute(Unknown Source)
	... 9 common frames omitted
2025-04-10 23:05:02.589 [pool-2-thread-1] ERROR c.p.controller.ProjectController.lambda$edytujZadanie$11(350) - Błąd podczas zapisywania zadania!
java.lang.RuntimeException: java.sql.SQLDataException: data exception: string data, right truncation
	at project.jfx.client/com.project.dao.ZadanieDAOImpl.setZadanie(ZadanieDAOImpl.java:102)
	at project.jfx.client/com.project.controller.ZadanieController.lambda$edytujZadanie$11(ZadanieController.java:340)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLDataException: data exception: string data, right truncation
	at org.hsqldb/org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb/org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb/org.hsqldb.jdbc.JDBCPreparedStatement.fetchResult(Unknown Source)
	at org.hsqldb/org.hsqldb.jdbc.JDBCPreparedStatement.executeUpdate(Unknown Source)
	at com.zaxxer.hikari@6.2.1/com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari@6.2.1/com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at project.jfx.client/com.project.dao.ZadanieDAOImpl.setZadanie(ZadanieDAOImpl.java:92)
	... 4 common frames omitted
Caused by: org.hsqldb.HsqlException: data exception: string data, right truncation
	at org.hsqldb/org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb/org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb/org.hsqldb.types.CharacterType.castOrConvertToType(Unknown Source)
	at org.hsqldb/org.hsqldb.types.CharacterType.convertToType(Unknown Source)
	at org.hsqldb/org.hsqldb.StatementDML.getUpdatedData(Unknown Source)
	at org.hsqldb/org.hsqldb.StatementDML.executeUpdateStatement(Unknown Source)
	at org.hsqldb/org.hsqldb.StatementDML.getResult(Unknown Source)
	at org.hsqldb/org.hsqldb.StatementDMQL.execute(Unknown Source)
	at org.hsqldb/org.hsqldb.Session.executeCompiledStatement(Unknown Source)
	at org.hsqldb/org.hsqldb.Session.execute(Unknown Source)
	... 9 common frames omitted
2025-04-10 23:31:33.800 [main] INFO  c.project.datasource.DbInitializer.init(49) - QUERY 1:
CREATE TABLE IF NOT EXISTS projekt(
 projekt_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
 nazwa VARCHAR(50) NOT NULL,
 opis VARCHAR(1000),
 dataczas_utworzenia TIMESTAMP DEFAULT now(),
 data_oddania DATE,
 CONSTRAINT projekt_pk PRIMARY KEY (projekt_id)
);
CREATE TABLE IF NOT EXISTS zadanie(
 zadanie_id SERIAL, --SERIAL lub INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1)
 nazwa VARCHAR(50) NOT NULL,
 opis VARCHAR(1000),
 kolejnosc INTEGER,
 dataczas_utworzenia TIMESTAMP DEFAULT now(),
 projekt_id INTEGER NOT NULL,
 CONSTRAINT zadanie_pk PRIMARY KEY (zadanie_id)
);

2025-04-10 23:31:33.802 [main] INFO  c.project.datasource.DbInitializer.init(49) - QUERY 2:
CREATE INDEX IF NOT EXISTS projekt_nazwa_idx ON projekt(nazwa);
CREATE INDEX IF NOT EXISTS zadanie_nazwa_idx ON zadanie(nazwa);
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS zadanie_projekt_fk FOREIGN KEY (projekt_id) REFERENCES projekt (projekt_id) ON DELETE CASCADE;
ALTER TABLE zadanie ADD CONSTRAINT IF NOT EXISTS unique_kolejnosc UNIQUE (kolejnosc, projekt_id);

